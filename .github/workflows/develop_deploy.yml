name: Develop Deploy

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  DOCKERHUB_USERNAME: ht3064
  DOCKERHUB_IMAGE_NAME: devfit-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/spring-boot-server

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ env.DOCKERHUB_USERNAME }}/spring-boot-server
            docker stop $(docker ps -a -q)
            docker run -d --name spring-boot-server -p 8080:8080 ${{ env.DOCKERHUB_USERNAME }}/spring-boot-server
            docker rm $(docker ps --filter 'status=exited' -a -q)
            docker image prune -a -f
